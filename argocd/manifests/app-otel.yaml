apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: app-otel
  namespace: infra-argocd
  labels:
    app.kubernetes.io/name: helm-infra-argocd
    app.kubernetes.io/component: app-otel
    app.kubernetes.io/managed-by: helm-infra-argocd
spec:
  destination:
    namespace: app-otel
    server: https://kubernetes.default.svc
  project: app-otel
  syncPolicy:
    automated: {}
  source:
    repoURL: https://open-telemetry.github.io/opentelemetry-helm-charts
    chart: opentelemetry-collector
    targetRevision: v0.93.3
    helm:
      values: |-
        fullnameOverride: app-otel
        mode: deployment
        image:
          repository: otel/opentelemetry-collector-contrib
        
        extraVolumeMounts:
          - name: varlogpods
            mountPath: /logspods
            readOnly: true
        
        extraVolumes:
          - name: varlogpods
            hostPath:
              path: /var/log/pods
              type: DirectoryOrCreate
        
        config:
          processors:
            resourcedetection:
              detectors: [env, system]
            cumulativetodelta:
          receivers:
            otlp:
              protocols:
                grpc:
                  endpoint: "0.0.0.0:4317"
                http:
                  endpoint: "0.0.0.0:4318"
            filelog:
              include_file_path: true
              include:
                - /logspods/**/*.log
              start_at: beginning
              operators:
                - type: regex_parser
                  regex: '^(?P<timestamp>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d+Z)'
                  timestamp:
                    parse_from: attributes.timestamp
                    layout: '%Y-%m-%dT%H:%M:%S.%fZ'
                - type: container
                  id: container-parser
        
          exporters:
            loki:
              endpoint: "http://172.20.104.10:3100/loki/api/v1/push"
              sending_queue:
                enabled: true
                num_consumers: 4
                queue_size: 1000
              retry_on_failure:
                enabled: true
                initial_interval: 5s
                max_interval: 30s
                max_elapsed_time: 300s
            prometheusremotewrite:
              endpoint: http://172.20.146.37:8080/api/v1/push
              headers:
                X-Scope-OrgID: "neosoft"
            logging:
              loglevel: debug
          service:
            pipelines:
              traces:
                receivers: [otlp]
                processors: [batch]
                exporters: [logging]
              metrics:
                receivers: [otlp]
                processors: [cumulativetodelta, batch, resourcedetection]
                exporters: [logging, prometheusremotewrite]
              logs:
                receivers: [filelog]
                processors: [batch]
                exporters: [loki]
