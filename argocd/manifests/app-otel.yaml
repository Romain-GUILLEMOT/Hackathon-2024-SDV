apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: app-otel
  namespace: infra-argocd
  labels:
    app.kubernetes.io/name: helm-infra-argocd
    app.kubernetes.io/component: app-otel
    app.kubernetes.io/managed-by: helm-infra-argocd
spec:
  destination:
    namespace: app-otel
    server: https://kubernetes.default.svc
  project: app-otel
  syncPolicy:
    automated: {}
  source:
    repoURL: https://open-telemetry.github.io/opentelemetry-helm-charts
    chart: opentelemetry-collector
    targetRevision: v0.93.3
    helm:
      values: |-
        fullnameOverride: app-otel
        mode: deployment
        image:
          repository: otel/opentelemetry-collector-contrib
        config:
          processors:
            resourcedetection:
              detectors: [env, system]
            cumulativetodelta:
          receivers:
            otlp:
              protocols:
                grpc:
                  endpoint: "0.0.0.0:4317"
                http:
                  endpoint: "0.0.0.0:4318"
            hostmetrics:
              collection_interval: 10s
              scrapers:
                cpu: {}
                load: {}
                memory: {}
                network: {}
                filesystem: {}
                disk: {}
            prometheus:
              config:
                scrape_configs:
                  - job_name: 'kubernetes-pods'
                    kubernetes_sd_configs:
                      - role: pod
                    relabel_configs:
                      - action: labelmap
                        regex: __meta_kubernetes_pod_label_(.+)
                      - action: replace
                        source_labels: [__meta_kubernetes_namespace]
                        target_label: kubernetes_namespace
                      - action: replace
                        source_labels: [__meta_kubernetes_pod_name]
                        target_label: kubernetes_pod_name  
          exporters:
            loki:
              endpoint: "http://172.20.104.10:3100/loki/api/v1/push"
            prometheusremotewrite:
              endpoint: http://172.20.146.37:8080/api/v1/push
              headers:
                X-Scope-OrgID: "neosoft" 
            logging:
              loglevel: debug
            otlp:
              endpoint: "tempo:4317"  # Exporter vers Tempo
          service:
            pipelines:
              traces:
                receivers: [otlp]
                processors: [batch]
                exporters: [logging, otlp]
              metrics:
                receivers: [otlp, hostmetrics]
                processors: [cumulativetodelta, batch, resourcedetection]
                exporters: [logging, prometheusremotewrite]
              logs:
                receivers: [otlp]
                processors: [batch]
                exporters: [loki]
