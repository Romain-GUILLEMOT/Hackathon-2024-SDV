apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: app-otel
  namespace: infra-argocd
  labels:
    app.kubernetes.io/name: helm-infra-argocd
    app.kubernetes.io/component: app-otel
    app.kubernetes.io/managed-by: helm-infra-argocd
spec:
  destination:
    namespace: app-otel
    server: https://kubernetes.default.svc
  project: app-otel
  syncPolicy:
    automated: {}
  source:
    repoURL: https://open-telemetry.github.io/opentelemetry-helm-charts
    chart: opentelemetry-collector
    targetRevision: v0.93.3
    helm:
      values: |-
        fullnameOverride: app-otel
        mode: deployment
        podAnnotations:
          pod-security.kubernetes.io/enforce: privileged
        securityContext:
          runAsUser: 0
          runAsGroup: 0
          capabilities:
            add:
              - SYS_ADMIN
              - NET_ADMIN
        image:
          repository: otel/opentelemetry-collector-contrib
        extraVolumes:
          - name: varlog
            hostPath:
              path: /var/log
        extraVolumeMounts:
          - name: varlog
            mountPath: /var/log
            readOnly: true
        
        clusterRole:
          create: true
          rules:
            - apiGroups:
                - ''
              resources:
                - nodes
                - nodes/proxy
                - nodes/stats
                - services
                - endpoints
                - pods
                - events
                - namespaces
                - namespaces/status
                - pods/status
                - replicationcontrollers
                - replicationcontrollers/status
                - resourcequotas
              verbs:
                - get
                - list
                - watch
            - nonResourceURLs:
                - /metrics
              verbs:
                - get
            - apiGroups:
                - apps
              resources:
                - daemonsets
                - deployments
                - replicasets
                - statefulsets
                - nodes/stats
              verbs:
                - get
                - list
                - watch
            - apiGroups:
                - extensions
              resources:
                - daemonsets
                - deployments
                - replicasets
              verbs:
                - get
                - list
                - watch
            - apiGroups:
                - batch
              resources:
                - jobs
                - cronjobs
              verbs:
                - get
                - list
                - watch
            - apiGroups:
                - autoscaling
              resources:
                - horizontalpodautoscalers
              verbs:
                - get
                - list
                - watch
        config:
          processors:
            resourcedetection:
              detectors: [env, system]
            cumulativetodelta:
          receivers:
            prometheus:
              config:
                scrape_configs:
                  - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
                    job_name: integrations/kubernetes/cadvisor
                    kubernetes_sd_configs:
                      - role: node
                    relabel_configs:
                      - replacement: kubernetes.default.svc.cluster.local:443
                        target_label: __address__
                      - regex: (.+)
                        replacement: /api/v1/nodes/$${1}/proxy/metrics/cadvisor
                        source_labels:
                          - __meta_kubernetes_node_name
                        target_label: __metrics_path__
                    metric_relabel_configs:
                      - source_labels: [__name__]
                        action: keep
                        regex: 'kube_node_status_condition|kube_pod_container_resource_limits_cpu_cores|kubelet_volume_stats_capacity_bytes|node.*|kube.*|containers.*|node_context_switches_total|node_load1|node_load5|node_load|kube_pod_container_status_last_terminated_exitcode|kube_pod_container_status_last_terminated_reason|kube_pod_status_qos_class|kube_pod_info|node_cpu_seconds_total|node_memory_MemAvailable_bytes|node_memory_MemTotal_bytes|kube_deployment_status_replicas_unavailable|node_network_receive_drop_total|kube_pod_container_status_restarts_total|container_oom_events_total|kubelet_volume_stats_used_bytes|node_network_transmit_bytes_total|machine_cpu_cores|container_cpu_cfs_periods_total|container_cpu_cfs_throttled_periods_total|container_cpu_usage_seconds_total|container_fs_reads_bytes_total|container_fs_reads_total|container_fs_writes_bytes_total|container_fs_writes_total|container_memory_cache|container_memory_rss|container_memory_swap|container_memory_working_set_bytes|container_network_receive_bytes_total|container_network_receive_packets_dropped_total|container_network_receive_packets_total|container_network_transmit_bytes_total|container_network_transmit_packets_dropped_total|container_network_transmit_packets_total|machine_memory_bytes'
                    scheme: https
                    tls_config:
                      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                      insecure_skip_verify: false
                      server_name: kubernetes
          
                  - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
                    job_name: integrations/kubernetes/kubelet
                    kubernetes_sd_configs:
                      - role: node
                    relabel_configs:
                      - replacement: kubernetes.default.svc.cluster.local:443
                        target_label: __address__
                      - regex: (.+)
                        replacement: /api/v1/nodes/$${1}/proxy/metrics
                        source_labels:
                          - __meta_kubernetes_node_name
                        target_label: __metrics_path__
                    metric_relabel_configs:
                      - source_labels: [__name__]
                        action: keep
                        regex: 'kube_node_status_condition|kube_pod_container_resource_limits_cpu_cores|node.*|kube.*|containers.*|node_context_switches_total|node_load1|node_load5|node_load15|kube_pod_container_status_last_terminated_exitcode|kube_pod_container_status_last_terminated_reason|kube_pod_status_qos_class|kube_pod_info|node_cpu_seconds_total|node_memory_MemAvailable_bytes|node_memory_MemTotal_bytes|kube_deployment_status_replicas_unavailable|node_network_receive_drop_total|kube_pod_container_status_restarts_total|container_oom_events_total|kubelet_volume_stats_used_bytes|node_network_transmit_bytes_total|machine_cpu_cores|container_cpu_usage_seconds_total|kubelet_certificate_manager_client_expiration_renew_errors|kubelet_certificate_manager_client_ttl_seconds|kubelet_certificate_manager_server_ttl_seconds|kubelet_cgroup_manager_duration_seconds_bucket|kubelet_cgroup_manager_duration_seconds_count|kubelet_node_config_error|kubelet_node_name|kubelet_pleg_relist_duration_seconds_bucket|kubelet_pleg_relist_duration_seconds_count|kubelet_pleg_relist_interval_seconds_bucket|kubelet_pod_start_duration_seconds_bucket|kubelet_pod_start_duration_seconds_count|kubelet_pod_worker_duration_seconds_bucket|kubelet_pod_worker_duration_seconds_count|kubelet_running_container_count|kubelet_running_containers|kubelet_running_pod_count|kubelet_running_pods|kubelet_runtime_operations_errors_total|kubelet_runtime_operations_total|kubelet_server_expiration_renew_errors|kubelet_volume_stats_available_bytes|kubelet_volume_stats_capacity_bytes|kubelet_volume_stats_inodes|kubelet_volume_stats_inodes_used|kubernetes_build_info|namespace_workload_pod|rest_client_requests_total|storage_operation_duration_seconds_count|storage_operation_errors_total|volume_manager_total_volumes'
                    scheme: https
                    tls_config:
                      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                      insecure_skip_verify: false
                      server_name: kubernetes
          
                  - job_name: integrations/kubernetes/kube-state-metrics
                    kubernetes_sd_configs:
                      - role: pod
                    relabel_configs:
                      - action: keep
                        regex: kube-state-metrics
                        source_labels:
                          - __meta_kubernetes_pod_label_app_kubernetes_io_name
                    metric_relabel_configs:
                      - source_labels: [__name__]
                        action: keep
                        regex: 'kube_node_status_condition|kube_pod_container_resource_limits_cpu_cores|kubelet_volume_stats_capacity_bytes|node.*|kube.*|containers.*|kube_networkpolicy_labels|kube_secret_info|kube_configmap_info|kube_hpa_labels|kube_persistentvolumeclaim_info|kube_daemonset_labels|kube_statefulset_labels|kube_deployment_labels|kube_ingress_info|ube_service_info|kube_pod_container_status_last_terminated_exitcode|kube_pod_status_qos_class|node_cpu_seconds_total|node_memory_MemAvailable_bytes|node_memory_MemTotal_bytes|kube_deployment_status_replicas_unavailable|node_network_receive_drop_total|container_oom_events_total|kubelet_volume_stats_used_bytes|node_network_transmit_bytes_total|machine_cpu_cores|container_cpu_usage_seconds_total|kube_daemonset.*|kube_deployment_metadata_generation|kube_deployment_spec_replicas|kube_deployment_status_observed_generation|kube_deployment_status_replicas_available|kube_deployment_status_replicas_updated|kube_horizontalpodautoscaler_spec_max_replicas|kube_horizontalpodautoscaler_spec_min_replicas|kube_horizontalpodautoscaler_status_current_replicas|kube_horizontalpodautoscaler_status_desired_replicas|kube_job.*|kube_namespace_status_phase|kube_node.*|kube_persistentvolumeclaim_resource_requests_storage_bytes|kube_pod_container_info|kube_pod_container_resource_limits|kube_pod_container_resource_requests|kube_pod_container_status_last_terminated_reason|kube_pod_container_status_restarts_total|kube_pod_container_status_waiting_reason|kube_pod_info|kube_pod_owner|kube_pod_start_time|kube_pod_status_phase|kube_pod_status_reason|kube_replicaset.*|kube_resourcequota|kube_statefulset.*'
          
                  - job_name: integrations/node_exporter
                    kubernetes_sd_configs:
                      - role: pod
                    relabel_configs:
                      - action: keep
                        regex: prometheus-node-exporter.*
                        source_labels:
                          - __meta_kubernetes_pod_label_app_kubernetes_io_name
                      - action: replace
                        source_labels:
                          - __meta_kubernetes_pod_node_name
                        target_label: instance
                      - action: replace
                        source_labels:
                          - __meta_kubernetes_namespace
                        target_label: namespace
                    metric_relabel_configs:
                      - source_labels: [__name__]
                        action: keep
                        regex: 'kube_node_status_condition|kube_pod_container_resource_limits_cpu_cores|kubelet_volume_stats_capacity_bytes|node.*|kube.*|containers.*|kube_networkpolicy_labels|kube_secret_info|kube_configmap_info|kube_hpa_labels|kube_persistentvolumeclaim_info|kube_daemonset_labels|kube_statefulset_labels|kube_deployment_labels|kube_ingress_info|kube_service_info|kube_pod_container_status_last_terminated_exitcode|kube_pod_container_status_last_terminated_reason|kube_pod_status_qos_class|kube_pod_info|node_cpu_seconds_total|node_memory_MemAvailable_bytes|node_memory_MemTotal_bytes|kube_deployment_status_replicas_unavailable|node_network_receive_drop_total|container_oom_events_total|kube_pod_container_status_restarts_total|kubelet_volume_stats_used_bytes|node_network_transmit_bytes_total|machine_cpu_cores|container_cpu_usage_seconds_total|node_cpu.*|node_exporter_build_info|node_filesystem.*|node_memory.*|process_cpu_seconds_total|process_resident_memory_bytes'
          
                  - job_name: node-exporter-ec2-nfs
                    static_configs:
                      - targets: ['nodeexporter-prometheus-node-exporter.default:9100']
                        labels:
                          service: nfs

            k8s_events:
              namespaces: []
            filelog:
              include:
                - /var/log/pods/*/*/*.log
              start_at: beginning
              include_file_path: true
              include_file_name: false
              operators:
                - type: router
                  id: get-format
                  routes:
                    - output: parser-docker
                      expr: 'body matches "^\\{"'
                    - output: parser-crio
                      expr: 'body matches "^[^ Z]+ "'
                    - output: parser-containerd
                      expr: 'body matches "^[^ Z]+Z"'
                - type: regex_parser
                  id: parser-crio
                  regex: '^(?P<time>[^ Z]+) (?P<stream>stdout|stderr) (?P<logtag>[^ ]*) ?(?P<log>.*)$'
                  output: extract_metadata_from_filepath
                  timestamp:
                    parse_from: attributes.time
                    layout_type: gotime
                    layout: '2006-01-02T15:04:05.999999999Z07:00'
                - type: regex_parser
                  id: parser-containerd
                  regex: '^(?P<time>[^ ^Z]+Z) (?P<stream>stdout|stderr) (?P<logtag>[^ ]*) ?(?P<log>.*)$'
                  output: extract_metadata_from_filepath
                  timestamp:
                    parse_from: attributes.time
                    layout: '%Y-%m-%dT%H:%M:%S.%LZ'
                - type: json_parser
                  id: parser-docker
                  output: extract_metadata_from_filepath
                  timestamp:
                    parse_from: attributes.time
                    layout: '%Y-%m-%dT%H:%M:%S.%LZ'
                - type: regex_parser
                  id: extract_metadata_from_filepath
                  regex: '^.*\/(?P<namespace>[^_]+)_(?P<pod_name>[^_]+)_(?P<uid>[a-f0-9\-]{16,36})\/(?P<container_name>[^\._]+)\/(?P<restart_count>\d+)\.log$'
                  parse_from: attributes["log.file.path"]
                  cache:
                    size: 128
                - type: move
                  from: attributes["log.file.path"]
                  to: resource["filename"]
                - type: move
                  from: attributes.container_name
                  to: resource["container"]
                - type: move
                  from: attributes.namespace
                  to: resource["namespace"]
                - type: move
                  from: attributes.pod_name
                  to: resource["pod"]
                - type: add
                  field: resource["cluster"]
                  value: 'eks-cluster'

          processors:
            resource/k8s_events:
              attributes:
                - action: insert
                  key: cluster
                  value: 'eks-cluster'
                - action: insert
                  key: job
                  value: 'integrations/kubernetes/eventhandler'
                - action: insert
                  key: loki.resource.labels
                  value: job, cluster
            resource:
              attributes:
                - action: insert
                  key: loki.format
                  value: raw
                - action: insert
                  key: loki.resource.labels
                  value: pod, namespace, container, cluster, filename
            batch:
              timeout: 1s
            memory_limiter:
              limit_mib: 20000
              spike_limit_mib: 500
              check_interval: 5s
        
          extensions:
            health_check:
              endpoint: 0.0.0.0:13133

          exporters:
            loki:
              endpoint: "http://app-loki-distributor.app-loki:3100/loki/api/v1/push"
              sending_queue:
                enabled: true
                num_consumers: 10
                queue_size: 10000
              retry_on_failure:
                enabled: true
                initial_interval: 5s
                max_interval: 30s
                max_elapsed_time: 300s
            prometheusremotewrite/metricsService:
              external_labels:
                cluster: 'eks-cluster'
                'k8s.cluster.name': 'eks-cluster'
              endpoint: http://app-mimir-nginx.app-mimir/api/v1/push
              headers:
                X-Scope-OrgID: neosoft
            otlp/tempo:
              endpoint: http://app-tempo-distributo.app-tempo:4317
              tls:
                insecure: true
            otlphttp/tempo:
              endpoint: http://app-tempo-distributo.app-tempo:4318
              tls:
                insecure: true
            logging:
              verbosity: detailed
          service:
            telemetry:
              logs:
                encoding: json
            extensions: [health_check]
            pipelines:
              traces:
                receivers: [otlp]
                processors: [memory_limiter, batch]
                exporters: [otlp/tempo, otlphttp/tempo, logging]
              metrics:
                receivers: [prometheus]
                processors: [memory_limiter, batch]
                exporters: [prometheusremotewrite/metricsService]
              logs:
                receivers: [filelog]
                processors: [resource]
                exporters: [loki]
              logs/k8s_events:
                 receivers: [k8s_events]
                 processors: [batch, resource/k8s_events]
                 exporters: [loki]